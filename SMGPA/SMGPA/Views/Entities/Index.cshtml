@model PagedList.IPagedList<SMGPA.Models.Entities>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>
<ol class="breadcrumb">
    <li class="active">Entidades</li>
</ol>
<h2>Entidades Administrativas</h2>

<p>
    <a class="btn btn-default btn-sm" href="@Url.Action("Create","Entities")">
        <span>Nueva Entidad</span>
    </a>
    <a class="btn btn-info btn-sm" href="@Url.Action("CreateFaculty","Entities")">
        <span>Nueva Facultad</span>
    </a>
</p>
@using (Html.BeginForm("Index", "Entities", FormMethod.Get))
{
    <p>
        Buscar por nombre: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Buscar" />
    </p>
}

<table class="table table-bordered">
    <tr>
        <th>
           @Html.ActionLink("Nombre", "Index", new { sortOrder = ViewBag.NameSortParam ,currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.DisplayName("Descripción")
        </th>
        <th>
            @Html.DisplayName("Activo")
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Nombre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Descripcion)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Activo)
        </td>
        <td>
            @Html.ActionLink("Involucrados", "Functionaries", new { id = item.idEntities }, new {@class = "btn btn-info btn-sm", data_modal = "" })
            @if (item.GetType().UnderlyingSystemType.Name.ToString().Contains("Entities"))
            {
                 <a class="btn btn-default btn-sm" href="@Url.Action("Edit", "Entities", new { id = item.idEntities })">
                      <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                 </a>
            }
            @if (item.GetType().UnderlyingSystemType.Name.ToString().Contains("Faculty"))
            {
                <a class="btn btn-default btn-sm" href="@Url.Action("EditFaculty", "Entities", new { id = item.idEntities })">
                    <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                </a>
            }
            <a class="btn btn-default btn-sm" href="@Url.Action("Details","Entities", new {id = item.idEntities})">
                <span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>
            </a>
            <a class="btn btn-default btn-sm" href="@Url.Action("Delete","Entities", new {id = item.idEntities})">
                <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
            </a>
        </td>
    </tr>
}

</table>
<br />
Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
@section Scripts {
    @Scripts.Render("~/bundles/modalform")
    
}