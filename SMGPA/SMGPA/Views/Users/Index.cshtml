@model PagedList.IPagedList<SMGPA.Models.User>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Usuarios del Sistema</h2>

<p>
    <a class="btn btn-default btn-sm" href="@Url.Action("Create","Users")">
        <span>Nuevo Usuario</span>
    </a>
</p>
@using (Html.BeginForm("Index", "Users", FormMethod.Get))
{
    <p>
        Buscar por rut: @Html.TextBox("rutString", ViewBag.CurrentFilter2 as string)
        Buscar por apellido: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Buscar" />
    </p>
}
<table class="table table-bordered">
    <tr>
        <th>
            @Html.ActionLink("Rut", "Index", new { sortOrder = ViewBag.RutSortParam, currentFilter = ViewBag.CurrentFilter2 })
        </th>
        <th>
            @Html.DisplayName("Nombre")        
        </th>
        <th>
            @Html.ActionLink("Apellido", "Index", new { sortOrder = ViewBag.NameSortParam, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.DisplayName("Mail Institucional")
        </th>
        <th>
            @Html.DisplayName("Activo")
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Rut)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Nombre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Apellido)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MailInstitucional)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Activo)
        </td>
       
        
        <td>
            @if (item.GetType().UnderlyingSystemType.Name.ToString().Contains("Administrator"))
            {
                <a class="btn btn-default btn-sm" href="@Url.Action("Edit","Users", new {id = item.idUser})">
                    <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                </a>
                <a class="btn btn-default btn-sm" href="@Url.Action("Details","Users", new {id = item.idUser})">
                    <span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>
                </a>
                <a class="btn btn-default btn-sm" href="@Url.Action("Delete","Users", new {id = item.idUser})">
                    <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                </a>
            }
            else
            {
                <a class="btn btn-default btn-sm" href="@Url.Action("Off","Users", new {id = item.idUser})">
                    <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                </a>
            }

        </td>
    </tr>
}
</table>
<br />
Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))